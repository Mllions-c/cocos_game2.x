{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\Game.js"],"names":["cc","Class","extends","Component","properties","background","Sprite","mapBackground","labelBackground","Prefab","overView","manager","default","tiles","tile","tileOriginX","tileOriginY","tileSpace","maxNumLabel","Label","describeLabel","score","scoreLabel","bestScore","bestScoreLabel","currentOverView","type","animationDuration","currentMousePositionX","currentMousePositionY","isAnimation","onLoad","console","log","setupTiles","storageBestScore","sys","localStorage","getItem","updateBestScore","setupMapBackground","setupEventListener","setTilePosition","toRow","toCol","animated","x","tileSize","width","y","height","moveTo","v2","runAction","setPosition","row","col","require","order","string","node","color","backgroundColor","scoreBoardColor","labelInstance","instantiate","rows","getRowCount","cols","getColCount","mapWidth","mapHeight","i","j","label","addChild","createRandomTile","showOverView","systemEvent","on","SystemEvent","EventType","KEY_UP","onKeyUp","Node","TOUCH_START","event","location","touch","getLocation","touchAction","xMove","yMove","Math","abs","actionForKeyCode","macro","KEY","right","left","up","down","TOUCH_END","TOUCH_CANCEL","keyCode","isMoved","moveUp","moveDown","moveLeft","moveRight","isCreated","isOver","checkWhetherOver","addScore","add","toString","clearScore","newBestScore","setItem","handleRestart","removeFromParent","nullPositions","push","size","randomIndex","floor","random","length","position","delayAction","delayTime","callAction","callFunc","createTileAtPosition","callFalseAnimationAction","resetIsAnimation","sequenceAction","sequence","curTileScript","getComponent","tagTileScript","tagi","tag","tagj","sender","mergeTiles","toTile","moveTilePosition","fromRow","fromCol","rowsCount","colsCount","moveVertically","moveHorizontally","outerCount","innerCount","getRealRow","tagRow","tagTile","realRow","tmpRow","Manager","pow","cardinality","updateTag","getRealCol","tagCol","realCol","tmpCol","oldTile","tileScript"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    background: cc.Sprite,\n    mapBackground: cc.Sprite,\n    labelBackground: cc.Prefab,\n    overView: cc.Prefab,\n\n    manager: {\n      default: null\n    },\n    tiles: [],\n    tile: cc.Prefab,\n\n    tileOriginX: 0,\n    tileOriginY: 0,\n    tileSpace: 10,\n\n    maxNumLabel: cc.Label,\n    describeLabel: cc.Label,\n    score: 0,\n    scoreLabel: cc.Label,\n    bestScore: 0,\n    bestScoreLabel: cc.Label,\n    currentOverView: {\n      default: null,\n      type: cc.Sprite\n    },\n\n    animationDuration: 0.1,\n\n    currentMousePositionX: -1,\n    currentMousePositionY: -1,\n\n    isAnimation: false\n  },\n\n  // use this for initialization\n  onLoad: function () {\n    console.log('update to 2.1 by yangyang')\n    this.setupTiles()\n\n    let storageBestScore = cc.sys.localStorage.getItem('bestScore')\n    if (!storageBestScore) {\n      storageBestScore = 0\n    }\n    this.updateBestScore(storageBestScore)\n\n    this.setupMapBackground()\n    this.setupEventListener()\n  },\n\n  setTilePosition: function (tile, toRow, toCol, animated) {\n    let x =\n      this.tileOriginX +\n      this.tileSpace +\n      toCol * (this.tileSpace + this.manager.tileSize.width)\n    let y =\n      this.tileOriginY +\n      this.tileSpace +\n      toRow * (this.tileSpace + this.manager.tileSize.height)\n\n    if (animated) {\n      let moveTo = cc.moveTo(this.animationDuration, cc.v2(x, y))\n      tile.runAction(moveTo)\n    } else {\n      tile.setPosition(x, y)\n    }\n\n    tile.row = toRow\n    tile.col = toCol\n  },\n\n  /**\n     * 初始化主地图数据\n     */\n  setupTiles: function () {\n    this.manager = require('Manager')\n    if (this.manager.order == 3) {\n      this.tiles = [[null, null, null], [null, null, null], [null, null, null]]\n      this.maxNumLabel.string = '1024'\n      this.describeLabel.string = 'Join the numbers\\nto get to 1024'\n    } else if (this.manager.order == 4) {\n      this.tiles = [\n        [null, null, null, null],\n        [null, null, null, null],\n        [null, null, null, null],\n        [null, null, null, null]\n      ]\n      this.maxNumLabel.string = '2048'\n      this.describeLabel.string = 'Join the numbers\\nto get to 2048'\n    } else if (this.manager.order == 5) {\n      this.tiles = [\n        [null, null, null, null, null],\n        [null, null, null, null, null],\n        [null, null, null, null, null],\n        [null, null, null, null, null],\n        [null, null, null, null, null]\n      ]\n      this.maxNumLabel.string = '8192'\n      this.describeLabel.string = 'Join the numbers\\nto get to 8192'\n    }\n  },\n\n  /**\n     * 初始化游戏背景, 左下角是起点\n     */\n  setupMapBackground: function () {\n    this.background.node.color = this.manager.backgroundColor()\n    this.mapBackground.node.color = this.manager.scoreBoardColor()\n\n    let labelInstance = cc.instantiate(this.labelBackground)\n    this.manager.tileSize.width = labelInstance.width\n    this.manager.tileSize.height = labelInstance.height\n\n    let rows = this.manager.getRowCount()\n    let cols = this.manager.getColCount()\n\n    let mapWidth =\n      (this.manager.tileSize.width + this.tileSpace) * rows + this.tileSpace\n    let mapHeight =\n      (this.manager.tileSize.height + this.tileSpace) * cols + this.tileSpace\n    this.mapBackground.node.width = mapWidth\n    this.mapBackground.node.height = mapHeight\n    this.tileOriginX = -1 * (mapWidth - this.manager.tileSize.width) / 2\n    this.tileOriginY = -1 * (mapHeight - this.manager.tileSize.height) / 2\n\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        let label = cc.instantiate(this.labelBackground)\n        this.setTilePosition(label, i, j, false)\n        this.mapBackground.node.addChild(label)\n      }\n    }\n\n    this.createRandomTile(false)\n    this.createRandomTile(false)\n  },\n\n  showOverView: function () {\n    if (this.currentOverView == null) {\n      this.currentOverView = cc.instantiate(this.overView)\n    }\n    this.background.node.addChild(this.currentOverView)\n  },\n\n  /**\n     * 初始化系统事件监听\n     */\n  setupEventListener: function () {\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this)\n\n    this.mapBackground.node.on(\n      cc.Node.EventType.TOUCH_START,\n      function (event) {\n        let location = event.touch.getLocation()\n        this.currentMousePositionX = location.x\n        this.currentMousePositionY = location.y\n      },\n      this\n    )\n\n    let touchAction = function (event) {\n      let location = event.touch.getLocation()\n      let xMove = location.x - this.currentMousePositionX\n      let yMove = location.y - this.currentMousePositionY\n      if (Math.abs(xMove) > Math.abs(yMove)) {\n        if (xMove > 0) {\n          this.actionForKeyCode(cc.macro.KEY.right)\n        } else {\n          this.actionForKeyCode(cc.macro.KEY.left)\n        }\n      } else {\n        if (yMove > 0) {\n          this.actionForKeyCode(cc.macro.KEY.up)\n        } else {\n          this.actionForKeyCode(cc.macro.KEY.down)\n        }\n      }\n    }\n\n    this.mapBackground.node.on(cc.Node.EventType.TOUCH_END, touchAction, this)\n    this.mapBackground.node.on(\n      cc.Node.EventType.TOUCH_CANCEL,\n      touchAction,\n      this\n    )\n  },\n\n  /**\n     * 键盘按钮抬起时的事件响应\n     * @param event\n     */\n  onKeyUp: function (event) {\n    this.actionForKeyCode(event.keyCode)\n  },\n\n  actionForKeyCode: function (keyCode) {\n    if (this.isAnimation) {\n      return\n    }\n\n    var isMoved = false\n    switch (keyCode) {\n      case cc.macro.KEY.up: {\n        isMoved = this.moveUp()\n        break\n      }\n      case cc.macro.KEY.down: {\n        isMoved = this.moveDown()\n        break\n      }\n      case cc.macro.KEY.left: {\n        isMoved = this.moveLeft()\n        break\n      }\n      case cc.macro.KEY.right: {\n        isMoved = this.moveRight()\n        break\n      }\n    }\n\n    if (isMoved) {\n      this.isAnimation = true\n\n      let isCreated = this.createRandomTile(true)\n      if (!isCreated) {\n        this.showOverView()\n      }\n    } else {\n      // 检查是否结束\n      let isOver = this.checkWhetherOver()\n      if (isOver) {\n        this.showOverView()\n      }\n    }\n  },\n\n  /**\n     * 增加分数\n     */\n  addScore: function (add) {\n    this.score += add\n\n    this.scoreLabel.string = this.score.toString()\n\n    if (this.score > this.bestScore) {\n      this.updateBestScore(this.score)\n    }\n  },\n\n  /**\n     * 清空分数\n     */\n  clearScore: function () {\n    this.score = 0\n\n    this.scoreLabel.string = this.score.toString()\n  },\n\n  /**\n     * 更新最高分数\n     * @param newBestScore\n     */\n  updateBestScore: function (newBestScore) {\n    this.bestScore = newBestScore\n    this.bestScoreLabel.string = this.bestScore.toString()\n\n    cc.sys.localStorage.setItem('bestScore', this.bestScore)\n  },\n\n  /**\n     * restart 按钮的监听\n     */\n  handleRestart: function () {\n    if (this.currentOverView) {\n      this.currentOverView.removeFromParent()\n    }\n\n    this.setupTiles()\n    this.setupMapBackground()\n\n    this.score = 0\n    this.scoreLabel.string = this.score.toString()\n  },\n\n  createRandomTile: function (animated) {\n    let rows = this.manager.getRowCount()\n    let cols = this.manager.getColCount()\n    let nullPositions = []\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        if (this.tiles[i][j] == null) {\n          nullPositions.push(cc.v2(i, j))\n        }\n      }\n    }\n    if (nullPositions.size == 0) {\n      return false\n    }\n\n    let randomIndex = Math.floor(Math.random() * nullPositions.length)\n    let position = nullPositions[randomIndex]\n\n    if (animated) {\n      let delayAction = cc.delayTime(this.animationDuration + 0.1)\n      let callAction = cc.callFunc(this.createTileAtPosition, this, position)\n      let callFalseAnimationAction = cc.callFunc(this.resetIsAnimation, this)\n      let sequenceAction = cc.sequence([\n        delayAction,\n        callAction,\n        callFalseAnimationAction\n      ])\n      this.node.runAction(sequenceAction)\n    } else {\n      this.createTileAtPosition(this.node, position)\n\n      this.resetIsAnimation()\n    }\n\n    return true\n  },\n\n  resetIsAnimation: function () {\n    this.isAnimation = false\n  },\n\n  /**\n     * 判断游戏是否结束\n     */\n  checkWhetherOver: function () {\n    let rows = this.manager.getRowCount()\n    let cols = this.manager.getColCount()\n\n    var isOver = true\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        if (this.tiles[i][j] == null) {\n          isOver = false\n          break\n        }\n\n        let curTileScript = this.tiles[i][j].getComponent('Tile')\n        var tagTileScript\n        let tagi = i + 1\n        if (tagi < rows) {\n          tagTileScript = this.tiles[tagi][j].getComponent('Tile')\n          if (tagTileScript.tag == curTileScript.tag) {\n            isOver = false\n            break\n          }\n        }\n\n        let tagj = j + 1\n        if (tagj < cols) {\n          tagTileScript = this.tiles[i][tagj].getComponent('Tile')\n          if (tagTileScript.tag == curTileScript.tag) {\n            isOver = false\n            break\n          }\n        }\n      }\n    }\n\n    return isOver\n  },\n\n  /**\n     * 在指定位置添加 tile\n     */\n  createTileAtPosition: function (sender, position) {\n    let tile = cc.instantiate(this.tile)\n    this.tiles[position.x][position.y] = tile\n    this.setTilePosition(tile, position.x, position.y)\n    this.mapBackground.node.addChild(tile)\n  },\n\n  mergeTiles: function (tile, toTile) {},\n\n  moveTilePosition: function (tile, fromRow, fromCol, toRow, toCol) {\n    this.tiles[fromRow][fromCol] = null\n    this.tiles[toRow][toCol] = tile\n    this.setTilePosition(tile, toRow, toCol, true)\n  },\n\n  moveUp: function () {\n    let rowsCount = this.manager.getRowCount()\n    let colsCount = this.manager.getColCount()\n    return this.moveVertically(colsCount, rowsCount, function (fromRow) {\n      return rowsCount - 1 - fromRow\n    })\n  },\n\n  moveDown: function () {\n    let rowsCount = this.manager.getRowCount()\n    let colsCount = this.manager.getColCount()\n    return this.moveVertically(colsCount, rowsCount, function (fromRow) {\n      return fromRow\n    })\n  },\n\n  moveLeft: function () {\n    let rowsCount = this.manager.getRowCount()\n    let colsCount = this.manager.getColCount()\n    return this.moveHorizontally(rowsCount, colsCount, function (fromCol) {\n      return fromCol\n    })\n  },\n\n  moveRight: function () {\n    let rowsCount = this.manager.getRowCount()\n    let colsCount = this.manager.getColCount()\n    return this.moveHorizontally(rowsCount, colsCount, function (fromCol) {\n      return colsCount - 1 - fromCol\n    })\n  },\n\n  // 竖向\n  moveVertically: function (outerCount, innerCount, getRealRow) {\n    let isMoved = false\n\n    for (var col = 0; col < outerCount; col++) {\n      // 比较节点\n      var tagRow = 0\n      var tagTile = this.tiles[getRealRow(tagRow)][col]\n\n      for (var row = 1; row < innerCount; row++) {\n        let realRow = getRealRow(row)\n        var tile = this.tiles[realRow][col]\n        if (tile == null) {\n          continue\n        }\n\n        if (tagTile == null) {\n          this.moveTilePosition(tile, realRow, col, getRealRow(tagRow), col)\n          tagTile = tile\n          isMoved = true\n          continue\n        }\n\n        let tagTileScript = tagTile.getComponent('Tile')\n        let curTileScript = tile.getComponent('Tile')\n        let tmpRow = getRealRow(tagRow + 1)\n\n        if (tagTileScript.tag != curTileScript.tag) {\n          if (realRow != tmpRow) {\n            this.moveTilePosition(tile, realRow, col, tmpRow, col)\n            tagRow++\n            isMoved = true\n          } else {\n            tagRow = row\n          }\n          tagTile = tile\n        } else {\n          // 加分\n          let Manager = require('Manager')\n          let addScore = Math.pow(Manager.cardinality, curTileScript.tag + 1)\n          this.addScore(addScore)\n\n          // 移动 tile 到最后位置\n          this.moveTilePosition(tile, realRow, col, tagTile.row, tagTile.col)\n          // 后边我们继续使用的是 tagTile，tile 会被 remove\n          this.tiles[tagTile.row][tagTile.col] = tagTile\n\n          // 合并\n          let delayAction = cc.delayTime(this.animationDuration)\n          let callAction = cc.callFunc(this.updateTag, this, tile)\n          let sequenceAction = cc.sequence([delayAction, callAction])\n          tagTile.runAction(sequenceAction)\n\n          // 更新比较节点\n          tagRow++\n          tagTile = this.tiles[getRealRow(tagRow)][col]\n\n          isMoved = true\n        }\n      }\n    }\n\n    return isMoved\n  },\n\n  // 横向\n  moveHorizontally: function (outerCount, innerCount, getRealCol) {\n    let isMoved = false\n\n    for (var row = 0; row < outerCount; row++) {\n      // 比较节点\n      var tagCol = 0\n      var tagTile = this.tiles[row][getRealCol(tagCol)]\n\n      for (var col = 1; col < innerCount; col++) {\n        let realCol = getRealCol(col)\n        var tile = this.tiles[row][realCol]\n        if (tile == null) {\n          continue\n        }\n\n        if (tagTile == null) {\n          this.moveTilePosition(tile, row, realCol, row, getRealCol(tagCol))\n          tagTile = tile\n          isMoved = true\n          continue\n        }\n\n        let tagTileScript = tagTile.getComponent('Tile')\n        let curTileScript = tile.getComponent('Tile')\n        let tmpCol = getRealCol(tagCol + 1)\n\n        if (tagTileScript.tag != curTileScript.tag) {\n          if (realCol != tmpCol) {\n            this.moveTilePosition(tile, row, realCol, row, tmpCol)\n            tagCol++\n            isMoved = true\n          } else {\n            tagCol = col\n          }\n          tagTile = tile\n        } else {\n          // 加分\n          let Manager = require('Manager')\n          let addScore = Math.pow(Manager.cardinality, curTileScript.tag + 1)\n          this.addScore(addScore)\n\n          // 移动 tile 到最后位置\n          this.moveTilePosition(tile, row, realCol, tagTile.row, tagTile.col)\n          // 后边我们继续使用的是 tagTile，tile 会被 remove\n          this.tiles[tagTile.row][tagTile.col] = tagTile\n\n          // 合并\n          let delayAction = cc.delayTime(this.animationDuration)\n          let callAction = cc.callFunc(this.updateTag, this, tile)\n          let sequenceAction = cc.sequence([delayAction, callAction])\n          tagTile.runAction(sequenceAction)\n\n          // 更新比较节点\n          tagCol++\n          tagTile = this.tiles[row][getRealCol(tagCol)]\n          isMoved = true\n        }\n      }\n    }\n\n    return isMoved\n  },\n\n  updateTag: function (tile, oldTile) {\n    let tileScript = tile.getComponent('Tile')\n    tileScript.tag += 1\n    tileScript.updateTag()\n\n    oldTile.removeFromParent()\n  }\n})\n"]}
{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\PillarGenerator.js"],"names":["cc","Class","extends","Component","properties","pillarPrefab","default","type","Prefab","tooltip","scroreSpacePrefab","scoreLabel","Label","score","visible","pillarSapce","pillarMinHeight","pillarMoveSpeed","pillarGenerateMargin","pillars","lastPillarGenerateMargin","birdPrefab","bird","birdUpSpeed","birdSpeed","birdGravitationalAcceleration","isCollided","startLayer","Node","onLoad","console","log","setupEventListener","setupCollisionListener","setupStartLayer","setupBird","setupPillars","showStartLayer","update","dt","dtSpace","i","length","pillarArr","upPillar","downPillar","scoreSpace","x","node","width","generateTwoPillar","minX","shift","removeFromParent","currentBirdSpeed","birdUpHeight","angle","birdY","y","root","parent","addChild","height","tmpPillar","instantiate","maxX","restartGame","string","toString","effectHeight","spaceCenterY","Math","random","upPillarDownY","upPillarHeight","upY","generateAPillar","downPillarUpY","downPillarHeight","downY","scoreSpaceCollider","getComponent","BoxCollider","size","offset","push","rotation","pillar","collider","on","EventType","TOUCH_START","event","self","script"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACVC,kBAAc;AACZC,eAAS,IADG;AAEZC,YAAMP,GAAGQ,MAFG;AAGZC,eAAS;AAHG,KADJ;;AAOVC,uBAAmB;AACjBJ,eAAS,IADQ;AAEjBC,YAAMP,GAAGQ,MAFQ;AAGjBC,eAAS;AAHQ,KAPT;;AAaVE,gBAAY;AACVL,eAAS,IADC;AAEVC,YAAMP,GAAGY,KAFC;AAGVH,eAAS;AAHC,KAbF;;AAmBVI,WAAO;AACLP,eAAS,CADJ;AAELQ,eAAS,KAFJ;AAGLL,eAAS;AAHJ,KAnBG;;AAyBVM,iBAAa;AACXT,eAAS,CADE;AAEXG,eAAS;AAFE,KAzBH;;AA8BVO,qBAAiB;AACfV,eAAS,CADM;AAEfG,eAAS;AAFM,KA9BP;;AAmCVQ,qBAAiB;AACfX,eAAS,CADM;AAEfG,eAAS;AAFM,KAnCP;;AAwCVS,0BAAsB;AACpBZ,eAAS,CADW;AAEpBG,eAAS;AAFW,KAxCZ;;AA6CVU,aAAS;AACPb,eAAS,EADF;AAEPQ,eAAS,KAFF;AAGPL,eAAS;AAHF,KA7CC;;AAmDVW,8BAA0B;AACxBd,eAAS,CADe;AAExBQ,eAAS,KAFe;AAGxBL,eAAS;AAHe,KAnDhB;;AAyDVY,gBAAY;AACVf,eAAS,IADC;AAEVC,YAAMP,GAAGQ,MAFC;AAGVC,eAAS;AAHC,KAzDF;;AA+DVa,UAAM;AACJhB,eAAS,IADL;AAEJQ,eAAS,KAFL;AAGJL,eAAS;AAHL,KA/DI;;AAqEVc,iBAAa;AACXjB,eAAS,GADE;AAEXG,eAAS;AAFE,KArEH;;AA0EVe,eAAW;AACTlB,eAAS,GADA;AAETQ,eAAS,KAFA;AAGTL,eAAS;AAHA,KA1ED;;AAgFVgB,mCAA+B;AAC7BnB,eAAS,GADoB;AAE7BG,eAAS;AAFoB,KAhFrB;;AAqFViB,gBAAY;AACVpB,eAAS,KADC;AAEVQ,eAAS,KAFC;AAGVL,eAAS;AAHC,KArFF;;AA2FVkB,gBAAY;AACVrB,eAAS,IADC;AAEVC,YAAMP,GAAG4B,IAFC;AAGVnB,eAAS;AAHC;AA3FF,GAHL;;AAqGP;AACAoB,UAAQ,kBAAY;AAClBC,YAAQC,GAAR,CAAY,2BAAZ;AACA,SAAKC,kBAAL;AACA,SAAKC,sBAAL,CAA4B,IAA5B;AACA,SAAKC,eAAL;AACA,SAAKC,SAAL;AACA,SAAKC,YAAL;AACA,SAAKC,cAAL;AACD,GA9GM;;AAgHP;AACAC,UAAQ,gBAAUC,EAAV,EAAc;AACpB,QAAI,KAAKb,UAAT,EAAqB;AACnB;AACD;;AAED;AACA,QAAIc,UAAUD,KAAK,KAAKtB,eAAxB;;AAEA;AACA,SAAK,IAAIwB,IAAI,CAAb,EAAgBA,IAAI,KAAKtB,OAAL,CAAauB,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C,UAAIE,YAAY,KAAKxB,OAAL,CAAasB,CAAb,CAAhB;AACA,UAAIG,WAAWD,UAAU,CAAV,CAAf;AACA,UAAIE,aAAaF,UAAU,CAAV,CAAjB;AACA,UAAIG,aAAaH,UAAU,CAAV,CAAjB;;AAEAC,eAASG,CAAT,IAAcP,OAAd;AACAK,iBAAWE,CAAX,IAAgBP,OAAhB;AACAM,iBAAWC,CAAX,IAAgBP,OAAhB;AACD;;AAED;AACA,SAAKpB,wBAAL,IAAiCoB,OAAjC;;AAEA;AACA,QAAI,KAAKpB,wBAAL,IAAiC,KAAKF,oBAA1C,EAAgE;AAC9D;AACA,UAAI6B,IAAI,KAAKC,IAAL,CAAUC,KAAV,GAAkB,CAAlB,GAAsB,KAAK9B,OAAL,CAAa,CAAb,EAAgB,CAAhB,EAAmB8B,KAAnB,GAA2B,CAAzD;AACA,WAAKC,iBAAL,CAAuBH,CAAvB;AACA,WAAK3B,wBAAL,GAAgC,CAAhC;AACD;;AAED;AACA,SAAK,IAAIqB,KAAI,CAAb,EAAgBA,KAAI,KAAKtB,OAAL,CAAauB,MAAjC,EAAyCD,IAAzC,EAA8C;AAC5C,UAAIE,aAAY,KAAKxB,OAAL,CAAasB,EAAb,CAAhB;AACA,UAAIG,YAAWD,WAAU,CAAV,CAAf;AACA,UAAIE,cAAaF,WAAU,CAAV,CAAjB;AACA,UAAIG,cAAaH,WAAU,CAAV,CAAjB;;AAEA,UAAIQ,OAAO,CAAC,KAAKH,IAAL,CAAUC,KAAX,GAAmB,CAAnB,GAAuBL,UAASK,KAAT,GAAiB,CAAnD;AACA,UAAIL,UAASG,CAAT,GAAaI,IAAjB,EAAuB;AACrB,aAAKhC,OAAL,CAAaiC,KAAb;AACAR,kBAASS,gBAAT;AACAR,oBAAWQ,gBAAX;AACAP,oBAAWO,gBAAX;AACD;AACF;;AAED;AACA,QAAIC,mBACF,KAAK9B,SAAL,GAAiB,KAAKC,6BAAL,GAAqCc,EADxD;AAEA,SAAKf,SAAL,GAAiB8B,gBAAjB;AACA,QAAIC,eAAehB,KAAK,KAAKf,SAA7B;AACA,SAAKF,IAAL,CAAUkC,KAAV,GAAkB,CAAC,IAAD,IAASF,mBAAmB,KAAK/B,WAAjC,CAAlB;AACA,QAAIkC,QAAQ,KAAKnC,IAAL,CAAUoC,CAAV,GAAcH,YAA1B;AACA,SAAKjC,IAAL,CAAUoC,CAAV,GAAcD,KAAd;AACD,GAxKM;;AA0KP;;;AAGAvB,mBAAiB,2BAAY;AAC3B,SAAKP,UAAL,CAAgB0B,gBAAhB;AACD,GA/KM;;AAiLP;;;AAGAhB,kBAAgB,0BAAY;AAC1B,SAAKX,UAAL,GAAkB,IAAlB;;AAEA,SAAKC,UAAL,CAAgB0B,gBAAhB;AACA,QAAIM,OAAO,KAAKX,IAAL,CAAUY,MAArB;AACAD,SAAKE,QAAL,CAAc,KAAKlC,UAAnB;AACA,SAAKA,UAAL,CAAgBsB,KAAhB,GAAwBU,KAAKV,KAA7B;AACA,SAAKtB,UAAL,CAAgBmC,MAAhB,GAAyBH,KAAKG,MAA9B;AACA,SAAKnC,UAAL,CAAgBoB,CAAhB,GAAoB,CAApB;AACA,SAAKpB,UAAL,CAAgB+B,CAAhB,GAAoB,CAApB;AACD,GA9LM;;AAgMP;;;AAGAtB,gBAAc,wBAAY;AACxB,QAAI2B,YAAY/D,GAAGgE,WAAH,CAAe,KAAK3D,YAApB,CAAhB;AACA;AACA,QAAI4D,OAAO,KAAKjB,IAAL,CAAUC,KAAV,GAAkB,CAAlB,GAAsBc,UAAUd,KAAV,GAAkB,CAAnD;AACA;AACA,SAAKC,iBAAL,CAAuBe,IAAvB;AACA;AACA,SAAK7C,wBAAL,GAAgC,CAAhC;AACD,GA3MM;;AA6MP;;;AAGA8C,eAAa,uBAAY;AACvB;AACA,SAAK,IAAIzB,IAAI,CAAb,EAAgBA,IAAI,KAAKtB,OAAL,CAAauB,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C,UAAIE,YAAY,KAAKxB,OAAL,CAAasB,CAAb,CAAhB;AACA,UAAIG,WAAWD,UAAU,CAAV,CAAf;AACA,UAAIE,aAAaF,UAAU,CAAV,CAAjB;AACA,UAAIG,aAAaH,UAAU,CAAV,CAAjB;;AAEAC,eAASS,gBAAT;AACAR,iBAAWQ,gBAAX;AACAP,iBAAWO,gBAAX;AACD;AACD,SAAKlC,OAAL,GAAe,EAAf;;AAEA;AACA,SAAKG,IAAL,CAAU+B,gBAAV;;AAEA;AACA,SAAKxC,KAAL,GAAa,CAAb;AACA,SAAKF,UAAL,CAAgBwD,MAAhB,GAAyB,KAAKtD,KAAL,CAAWuD,QAAX,EAAzB;;AAEA;AACA,SAAKhC,YAAL;AACA,SAAKD,SAAL;;AAEA,SAAKR,UAAL,CAAgB0B,gBAAhB;;AAEA;AACA,SAAK3B,UAAL,GAAkB,KAAlB;AACD,GA7OM;;AA+OP;;;;AAIAwB,qBAAmB,2BAAUH,CAAV,EAAa;AAC9B;AACA,QAAIE,QAAQjD,GAAGgE,WAAH,CAAe,KAAK3D,YAApB,EAAkC4C,KAA9C;;AAEA;AACA;AACA,QAAIoB,eACF,KAAKrB,IAAL,CAAUc,MAAV,GAAmB,KAAK9C,eAAL,GAAuB,CAA1C,GAA8C,KAAKD,WADrD;AAEA,QAAIuD,eAAeC,KAAKC,MAAL,KAAgBH,YAAhB,GAA+BA,eAAe,CAAjE;;AAEA;AACA,QAAII,gBAAgBH,eAAe,KAAKvD,WAAL,GAAmB,CAAtD;AACA;AACA,QAAI2D,iBAAiB,KAAK1B,IAAL,CAAUc,MAAV,GAAmB,CAAnB,GAAuBW,aAA5C;AACA;AACA,QAAIE,MAAMF,gBAAgBC,iBAAiB,CAA3C;AACA;AACA,QAAI9B,WAAW,KAAKgC,eAAL,CAAqB7B,CAArB,EAAwB4B,GAAxB,EAA6B1B,KAA7B,EAAoCyB,cAApC,EAAoD,CAApD,CAAf;;AAEA;AACA,QAAIG,gBAAgBP,eAAe,KAAKvD,WAAL,GAAmB,CAAtD;AACA;AACA,QAAI+D,mBAAmB,KAAK9B,IAAL,CAAUc,MAAV,GAAmB,CAAnB,GAAuBW,aAA9C;AACA;AACA,QAAIM,QAAQF,gBAAgBC,mBAAmB,CAA/C;AACA;AACA,QAAIjC,aAAa,KAAK+B,eAAL,CACf7B,CADe,EAEfgC,KAFe,EAGf9B,KAHe,EAIf6B,gBAJe,EAKf,GALe,CAAjB;;AAQA;AACA,QAAIhC,aAAa9C,GAAGgE,WAAH,CAAe,KAAKtD,iBAApB,CAAjB;AACA,SAAKsC,IAAL,CAAUa,QAAV,CAAmBf,UAAnB;AACAA,eAAWG,KAAX,GAAmBA,KAAnB;AACAH,eAAWgB,MAAX,GAAoBW,gBAAgBI,aAApC;AACA/B,eAAWC,CAAX,GAAeA,CAAf;AACAD,eAAWY,CAAX,GAAemB,gBAAgB/B,WAAWgB,MAAX,GAAoB,CAAnD;AACA,QAAIkB,qBAAqBlC,WAAWmC,YAAX,CAAwBjF,GAAGkF,WAA3B,CAAzB;AACAF,uBAAmBG,IAAnB,CAAwBlC,KAAxB,GAAgCH,WAAWG,KAA3C;AACA+B,uBAAmBG,IAAnB,CAAwBrB,MAAxB,GAAiChB,WAAWgB,MAA5C;AACAkB,uBAAmBI,MAAnB,CAA0BrC,CAA1B,GAA8B,CAA9B;AACAiC,uBAAmBI,MAAnB,CAA0B1B,CAA1B,GAA8B,CAA9B;;AAEA;AACA,SAAKvC,OAAL,CAAakE,IAAb,CAAkB,CAACzC,QAAD,EAAWC,UAAX,EAAuBC,UAAvB,CAAlB;AACD,GApSM;;AAsSP;;;AAGA8B,mBAAiB,yBAAU7B,CAAV,EAAaW,CAAb,EAAgBT,KAAhB,EAAuBa,MAAvB,EAA+BwB,QAA/B,EAAyC;AACxD;AACA,QAAIC,SAASvF,GAAGgE,WAAH,CAAe,KAAK3D,YAApB,CAAb;AACA,SAAK2C,IAAL,CAAUa,QAAV,CAAmB0B,MAAnB;;AAEA;AACAA,WAAO/B,KAAP,GAAe8B,QAAf;AACA;AACAC,WAAOtC,KAAP,GAAeA,KAAf;AACAsC,WAAOzB,MAAP,GAAgBA,MAAhB;AACAyB,WAAOxC,CAAP,GAAWA,CAAX;AACAwC,WAAO7B,CAAP,GAAWA,CAAX;AACA;AACA,QAAI8B,WAAWD,OAAON,YAAP,CAAoBjF,GAAGkF,WAAvB,CAAf;AACAM,aAASL,IAAT,CAAclC,KAAd,GAAsBsC,OAAOtC,KAA7B;AACAuC,aAASL,IAAT,CAAcrB,MAAd,GAAuByB,OAAOzB,MAA9B;AACA0B,aAASJ,MAAT,CAAgBrC,CAAhB,GAAoB,CAApB;AACAyC,aAASJ,MAAT,CAAgB1B,CAAhB,GAAoB,CAApB;;AAEA,WAAO6B,MAAP;AACD,GA7TM;;AA+TP;;;AAGApD,aAAW,qBAAY;AACrB,SAAKb,IAAL,GAAYtB,GAAGgE,WAAH,CAAe,KAAK3C,UAApB,CAAZ;AACA;AACA;;AAEA,QAAI0B,IAAI,CAAC,GAAT;AACA,QAAIW,IAAI,CAAR;AACA,SAAKpC,IAAL,CAAUyB,CAAV,GAAcA,CAAd;AACA,SAAKzB,IAAL,CAAUoC,CAAV,GAAcA,CAAd;;AAEA,SAAKV,IAAL,CAAUa,QAAV,CAAmB,KAAKvC,IAAxB;;AAEA,SAAKE,SAAL,GAAiB,KAAKD,WAAtB;AACD,GA/UM;;AAiVP;;;AAGAS,sBAAoB,8BAAY;AAC9B,SAAKgB,IAAL,CAAUyC,EAAV,CACEzF,GAAG4B,IAAH,CAAQ8D,SAAR,CAAkBC,WADpB,EAEE,UAAUC,KAAV,EAAiB;AACf,UAAI,KAAKjE,UAAL,CAAgBiC,MAApB,EAA4B;AAC1B,aAAKM,WAAL;;AAEA;AACD;;AAED,WAAK1C,SAAL,GAAiB,KAAKD,WAAtB;AACA,WAAKD,IAAL,CAAUkC,KAAV,GAAkB,CAAC,EAAnB;AACD,KAXH,EAYE,IAZF;AAcD,GAnWM;;AAqWP;;;AAGAvB,0BAAwB,kCAAY;AAClC,QAAI4D,OAAO,IAAX;AACA,SAAK7C,IAAL,CAAUyC,EAAV,CAAa,UAAb,EAAyB,UAAUG,KAAV,EAAiB;AACxC,UAAIE,SAASD,KAAKZ,YAAL,CAAkB,iBAAlB,CAAb;AACAa,aAAOpE,UAAP,GAAoB,IAApB;AACAoE,aAAOzD,cAAP;AACD,KAJD;;AAMA,SAAKW,IAAL,CAAUyC,EAAV,CAAa,OAAb,EAAsB,UAAUG,KAAV,EAAiB;AACrC,UAAIE,SAASD,KAAKZ,YAAL,CAAkB,iBAAlB,CAAb;AACAa,aAAOjF,KAAP;AACAiF,aAAOnF,UAAP,CAAkBwD,MAAlB,GAA2B2B,OAAOjF,KAAP,CAAauD,QAAb,EAA3B;AACD,KAJD;AAKD;AArXM,CAAT","file":"PillarGenerator.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    pillarPrefab: {\n      default: null,\n      type: cc.Prefab,\n      tooltip: '柱子障碍物的 Prefab'\n    },\n\n    scroreSpacePrefab: {\n      default: null,\n      type: cc.Prefab,\n      tooltip: '柱子障碍物中间的空隙 prefab'\n    },\n\n    scoreLabel: {\n      default: null,\n      type: cc.Label,\n      tooltip: '显示分数的 label 组件'\n    },\n\n    score: {\n      default: 0,\n      visible: false,\n      tooltip: '玩家分数'\n    },\n\n    pillarSapce: {\n      default: 0,\n      tooltip: '上下障碍物的中间空隙间距'\n    },\n\n    pillarMinHeight: {\n      default: 0,\n      tooltip: '上下预留给障碍物的最小高度'\n    },\n\n    pillarMoveSpeed: {\n      default: 0,\n      tooltip: '障碍物的移动速度'\n    },\n\n    pillarGenerateMargin: {\n      default: 0,\n      tooltip: '间隔多远生成一次障碍物'\n    },\n\n    pillars: {\n      default: [],\n      visible: false,\n      tooltip: '记录所有障碍物的数组'\n    },\n\n    lastPillarGenerateMargin: {\n      default: 0,\n      visible: false,\n      tooltip: '距离上一次生成障碍物间隔了多远了'\n    },\n\n    birdPrefab: {\n      default: null,\n      type: cc.Prefab,\n      tooltip: '小鸟的 Prefab'\n    },\n\n    bird: {\n      default: null,\n      visible: false,\n      tooltip: '运行时生成的，当前在画面中的鸟'\n    },\n\n    birdUpSpeed: {\n      default: 0.0,\n      tooltip: '点击屏幕时，鸟获得的上升速度'\n    },\n\n    birdSpeed: {\n      default: 0.0,\n      visible: false,\n      tooltip: '鸟当前在 y 方向上的速度'\n    },\n\n    birdGravitationalAcceleration: {\n      default: 0.0,\n      tooltip: '鸟下降的重力加速度'\n    },\n\n    isCollided: {\n      default: false,\n      visible: false,\n      tooltip: '是否发生了碰撞'\n    },\n\n    startLayer: {\n      default: null,\n      type: cc.Node,\n      tooltip: '开始游戏视图'\n    }\n  },\n\n  // use this for initialization\n  onLoad: function () {\n    console.log('update to 2.1 by yangyang')\n    this.setupEventListener()\n    this.setupCollisionListener(this)\n    this.setupStartLayer()\n    this.setupBird()\n    this.setupPillars()\n    this.showStartLayer()\n  },\n\n  // called every frame, uncomment this function to activate update callback\n  update: function (dt) {\n    if (this.isCollided) {\n      return\n    }\n\n    // 本次更新移动的距离\n    let dtSpace = dt * this.pillarMoveSpeed\n\n    // 移动各个障碍物\n    for (let i = 0; i < this.pillars.length; i++) {\n      let pillarArr = this.pillars[i]\n      let upPillar = pillarArr[0]\n      let downPillar = pillarArr[1]\n      let scoreSpace = pillarArr[2]\n\n      upPillar.x -= dtSpace\n      downPillar.x -= dtSpace\n      scoreSpace.x -= dtSpace\n    }\n\n    // 记录距离上一次生成障碍物间隔了多远了\n    this.lastPillarGenerateMargin += dtSpace\n\n    // 检查是否需要生成新的障碍物\n    if (this.lastPillarGenerateMargin >= this.pillarGenerateMargin) {\n      // TODO：这里会有误差的应该\n      let x = this.node.width / 2 + this.pillars[0][0].width / 2\n      this.generateTwoPillar(x)\n      this.lastPillarGenerateMargin = 0\n    }\n\n    // 离开屏幕的障碍物的清理\n    for (let i = 0; i < this.pillars.length; i++) {\n      let pillarArr = this.pillars[i]\n      let upPillar = pillarArr[0]\n      let downPillar = pillarArr[1]\n      let scoreSpace = pillarArr[2]\n\n      let minX = -this.node.width / 2 - upPillar.width / 2\n      if (upPillar.x < minX) {\n        this.pillars.shift()\n        upPillar.removeFromParent()\n        downPillar.removeFromParent()\n        scoreSpace.removeFromParent()\n      }\n    }\n\n    // 鸟的当前速度\n    let currentBirdSpeed =\n      this.birdSpeed - this.birdGravitationalAcceleration * dt\n    this.birdSpeed = currentBirdSpeed\n    let birdUpHeight = dt * this.birdSpeed\n    this.bird.angle = -20.0 * (currentBirdSpeed / this.birdUpSpeed)\n    let birdY = this.bird.y + birdUpHeight\n    this.bird.y = birdY\n  },\n\n  /**\n     * 创建开始游戏视图\n     */\n  setupStartLayer: function () {\n    this.startLayer.removeFromParent()\n  },\n\n  /**\n     * 切换显示开始游戏视图\n     */\n  showStartLayer: function () {\n    this.isCollided = true\n\n    this.startLayer.removeFromParent()\n    let root = this.node.parent\n    root.addChild(this.startLayer)\n    this.startLayer.width = root.width\n    this.startLayer.height = root.height\n    this.startLayer.x = 0\n    this.startLayer.y = 0\n  },\n\n  /**\n     * 生成初始的障碍物\n     */\n  setupPillars: function () {\n    let tmpPillar = cc.instantiate(this.pillarPrefab)\n    // 最大可生成的位置\n    let maxX = this.node.width / 2 + tmpPillar.width / 2\n    // 记录下最后一次生成位置的下一个位置\n    this.generateTwoPillar(maxX)\n    // 距离上一个生成位置已经间隔了多远\n    this.lastPillarGenerateMargin = 0\n  },\n\n  /**\n     * 重新开始一局新游戏\n     */\n  restartGame: function () {\n    // 移除各个障碍物\n    for (let i = 0; i < this.pillars.length; i++) {\n      let pillarArr = this.pillars[i]\n      let upPillar = pillarArr[0]\n      let downPillar = pillarArr[1]\n      let scoreSpace = pillarArr[2]\n\n      upPillar.removeFromParent()\n      downPillar.removeFromParent()\n      scoreSpace.removeFromParent()\n    }\n    this.pillars = []\n\n    // 移除鸟\n    this.bird.removeFromParent()\n\n    // 分数\n    this.score = 0\n    this.scoreLabel.string = this.score.toString()\n\n    // 重新初始化设置\n    this.setupPillars()\n    this.setupBird()\n\n    this.startLayer.removeFromParent()\n\n    // 重新开始游戏\n    this.isCollided = false\n  },\n\n  /**\n     * 生成一对新的障碍物并自动加入到场景中\n     * @param x 障碍物生成的水平位置\n     */\n  generateTwoPillar: function (x) {\n    // 障碍物的宽度\n    let width = cc.instantiate(this.pillarPrefab).width\n\n    // 障碍物间隙中心位置上下\n    // 这里已经照顾到了上下障碍物都有个最小高度\n    let effectHeight =\n      this.node.height - this.pillarMinHeight * 2 - this.pillarSapce\n    let spaceCenterY = Math.random() * effectHeight - effectHeight / 2\n\n    // 上边障碍物的下边缘位置\n    let upPillarDownY = spaceCenterY + this.pillarSapce / 2\n    // 上边障碍物的高度\n    let upPillarHeight = this.node.height / 2 - upPillarDownY\n    // 上边障碍物的 Y\n    let upY = upPillarDownY + upPillarHeight / 2\n    // 生成上边的障碍物\n    let upPillar = this.generateAPillar(x, upY, width, upPillarHeight, 0)\n\n    // 下边障碍物的上边缘位置\n    let downPillarUpY = spaceCenterY - this.pillarSapce / 2\n    // 下边障碍物的高度\n    let downPillarHeight = this.node.height / 2 + upPillarDownY\n    // 下边障碍物的 Y\n    let downY = downPillarUpY - downPillarHeight / 2\n    // 设置下边障碍物的位置大小\n    let downPillar = this.generateAPillar(\n      x,\n      downY,\n      width,\n      downPillarHeight,\n      180\n    )\n\n    // 中间空隙中添加一个 scoreSpace 用于计分\n    let scoreSpace = cc.instantiate(this.scroreSpacePrefab)\n    this.node.addChild(scoreSpace)\n    scoreSpace.width = width\n    scoreSpace.height = upPillarDownY - downPillarUpY\n    scoreSpace.x = x\n    scoreSpace.y = downPillarUpY + scoreSpace.height / 2\n    let scoreSpaceCollider = scoreSpace.getComponent(cc.BoxCollider)\n    scoreSpaceCollider.size.width = scoreSpace.width\n    scoreSpaceCollider.size.height = scoreSpace.height\n    scoreSpaceCollider.offset.x = 0\n    scoreSpaceCollider.offset.y = 0\n\n    // 放到障碍物数组中\n    this.pillars.push([upPillar, downPillar, scoreSpace])\n  },\n\n  /**\n     * 生成一个新的障碍物并自动加入到场景中\n     */\n  generateAPillar: function (x, y, width, height, rotation) {\n    // 生成障碍物实例\n    let pillar = cc.instantiate(this.pillarPrefab)\n    this.node.addChild(pillar)\n\n    // 设置障碍物的旋转\n    pillar.angle = rotation\n    // 设置障碍物的位置大小\n    pillar.width = width\n    pillar.height = height\n    pillar.x = x\n    pillar.y = y\n    // 设置碰撞体的位置大小\n    let collider = pillar.getComponent(cc.BoxCollider)\n    collider.size.width = pillar.width\n    collider.size.height = pillar.height\n    collider.offset.x = 0\n    collider.offset.y = 0\n\n    return pillar\n  },\n\n  /**\n     * 生成初始的小鸟\n     */\n  setupBird: function () {\n    this.bird = cc.instantiate(this.birdPrefab)\n    // 初始化位置(x始终不变)\n    // x不变\n\n    let x = -200\n    let y = 0\n    this.bird.x = x\n    this.bird.y = y\n\n    this.node.addChild(this.bird)\n\n    this.birdSpeed = this.birdUpSpeed\n  },\n\n  /**\n     * 初始化系统事件监听\n     */\n  setupEventListener: function () {\n    this.node.on(\n      cc.Node.EventType.TOUCH_START,\n      function (event) {\n        if (this.startLayer.parent) {\n          this.restartGame()\n\n          return\n        }\n\n        this.birdSpeed = this.birdUpSpeed\n        this.bird.angle = -20\n      },\n      this\n    )\n  },\n\n  /**\n     * 初始化碰撞检测\n     */\n  setupCollisionListener: function () {\n    let self = this\n    this.node.on('collided', function (event) {\n      let script = self.getComponent('PillarGenerator')\n      script.isCollided = true\n      script.showStartLayer()\n    })\n\n    this.node.on('score', function (event) {\n      let script = self.getComponent('PillarGenerator')\n      script.score++\n      script.scoreLabel.string = script.score.toString()\n    })\n  }\n})\n"]}